/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.7.v20170914
 * Generated at: 2022-05-13 19:00:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/CDS/.m2/repository/org/apache/struts/struts2-core/2.5.30/struts2-core-2.5.30.jar!/META-INF/struts-tags.tld", Long.valueOf(1647373792000L));
    _jspx_dependants.put("file:/C:/Users/CDS/.m2/repository/org/apache/struts/struts2-core/2.5.30/struts2-core-2.5.30.jar", Long.valueOf(1652127191202L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html ng-app=\"categoria\" lang=\"es\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Categorías</title>\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js\"></script>\r\n");
      out.write("    <script src=\"https://code.angularjs.org/1.8.2/angular-route.min.js\"></script>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("          integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("    <script src=\"//cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body ng-controller=\"myController\" style=\"background-color: #fc4b08; color: #003049;\">\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark\" style=\"background-color: #003049;\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("        <a class=\"navbar-brand\">Tienda</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n");
      out.write("                data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n");
      out.write("                aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link active\" aria-current=\"page\" href=\"./index.html\">Artículos</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link active\" aria-current=\"page\" href=\"./teacher.html\">Categorías</a>\r\n");
      out.write("                </li>\r\n");
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("<h1 class=\"mt-3 text-center\" style=\"color: white;\">Categorías</h1>\r\n");
      out.write("<hr style=\"background-color: white;\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"d-md-flex justify-content-md-end mb-3\">\r\n");
      out.write("        <input class=\"form-control me-2\" type=\"search\"  placeholder=\"Buscar\" ng-model=\"find\" aria-label=\"Search\">\r\n");
      out.write("        <button class=\"btn btn-success\" type=\"button\" data-bs-toggle=\"modal\"\r\n");
      out.write("                data-bs-target=\"#register\"><i\r\n");
      out.write("                class=\"fas fa-plus\"></i></button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row text-center\">\r\n");
      out.write("        <div class=\"col-12\" ng-if=\"(data.categoryList | filter : find) == '' \">\r\n");
      out.write("            <span class=\"badge rounded-pill\" style=\"background-color: #003049; font-size: 18px;\">No hay registros</span>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-lg-3 col-sm-6\"  ng-repeat=\"categorie in data.categoryList | filter : find\">\r\n");
      out.write("            <div class=\"card m-1\" >\r\n");
      out.write("                <div class=\"card-body\">\r\n");
      out.write("                    <h5 class=\"card-title\">{{categorie.name|uppercase}}</h5>\r\n");
      out.write("                    <p class=\"card-text\">{{categorie.description}}</p>\r\n");
      out.write("                    <button type=\"button\" ng-click=\"getCat(categorie.id)\" data-bs-toggle=\"modal\"\r\n");
      out.write("                            data-bs-target=\"#modify\" class=\"btn btn-warning\"><i\r\n");
      out.write("                            class=\"fas fa-edit\"></i></button>\r\n");
      out.write("                    <button class=\"btn\"  ng-click=\"delete(categorie.id)\" style=\"background-color: #D62828; color: white;\"><i\r\n");
      out.write("                            class=\"fas fa-trash\"></i></button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<form id=\"reg\" method=\"post\"  ng-submit=\"register()\">\r\n");
      out.write("    <div class=\"modal fade\" id=\"register\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\" style=\"background-color: #003049;\">\r\n");
      out.write("                    <h5 class=\"modal-title\" style=\"color: white;\">Registrar una categoría</h5>\r\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"mb-3\">\r\n");
      out.write("                                <label class=\"form-label\">Nombre</label>\r\n");
      out.write("\r\n");
      out.write("                                <input ng-change=\"validate()\" type=\"text\" ng-model=\"category.name\"\r\n");
      out.write("                                       name=\"category.name\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n");
      out.write("                                <span style=\"color: #D62828;\" ng-show=\"errorName\">El nombre es requerido</span>\r\n");
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"mb-3\">\r\n");
      out.write("                                <label class=\"form-label\">Descripción</label>\r\n");
      out.write("                                <input ng-change=\"validate()\" type=\"text\" ng-model=\"category.description\"\r\n");
      out.write("                                       name=\"category.description\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n");
      out.write("                                <span style=\"color: #D62828;\" ng-show=\"errorDescription\">La descripción es\r\n");
      out.write("                                        requerida</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\r\n");
      out.write("                    <button type=\"submit\" class=\"btn\" style=\"background-color: #003049;color: white;\"\r\n");
      out.write("                            ng-disabled=\"goRegister\">Registrar</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("<form ng-submit=\"modifyGo()\" method=\"post\">\r\n");
      out.write("    <div class=\"modal fade\" id=\"modify\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\" style=\"background-color: #003049;\">\r\n");
      out.write("                    <h5 class=\"modal-title\" style=\"color: white\" id=\"exampleModalLabel\">Modificar una categoría</h5>\r\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <div class=\"container\">\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"mb-3\">\r\n");
      out.write("                                <label class=\"form-label\">Nombre</label>\r\n");
      out.write("                                <input ng-model=\"category.id\" name=\"id\" type=\"hidden\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n");
      out.write("                                <input ng-change=\"validateUpdate()\"  disabled ng-model=\"name\" name=\"name\" type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n");
      out.write("                                <span style=\"color: #D62828;\" ng-show=\"errorName\">El nombre es requerido</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"mb-3\">\r\n");
      out.write("                                <label class=\"form-label\">Descripción</label>\r\n");
      out.write("                                <input type=\"text\" ng-change=\"validateUpdate()\"  ng-model=\"description\" name=\"description\"  class=\"form-control\" aria-describedby=\"emailHelp\">\r\n");
      out.write("                                <span style=\"color: #D62828;\" ng-show=\"errorDescription\">La descripción es\r\n");
      out.write("                                        requerida</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\r\n");
      out.write("                    <button type=\"submit\" ng-disabled=\"goModify\" class=\"btn\" style=\"background-color: #003049;color: white;\">Modificar</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    let miAplicacion = angular.module(\"categoria\", ['ngRoute'])\r\n");
      out.write("    miAplicacion.controller(\"myController\", function ($scope, $http) {\r\n");
      out.write("        $scope.goRegister = true;\r\n");
      out.write("        $http({\r\n");
      out.write("            method: 'GET',\r\n");
      out.write("            headers: {\r\n");
      out.write("                'Content-Type': 'application/x-www-form-urlencoded',\r\n");
      out.write("            },\r\n");
      out.write("            url: 'http://localhost:8080/basic_struts/findAll'\r\n");
      out.write("        }).then(function successCallback(response) {\r\n");
      out.write("            $scope.data = response.data\r\n");
      out.write("        }, function errorCallback(response) {\r\n");
      out.write("            console.log(\"aaa\");\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $scope.getAll = () => {\r\n");
      out.write("            $http({\r\n");
      out.write("                method: 'GET',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/x-www-form-urlencoded',\r\n");
      out.write("                },\r\n");
      out.write("                url: 'http://localhost:8080/basic_struts/findAll'\r\n");
      out.write("            }).then(function successCallback(response) {\r\n");
      out.write("                $scope.data = response.data\r\n");
      out.write("            }, function errorCallback(response) {\r\n");
      out.write("                console.log(\"aaa\");\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        $scope.validate = () => {\r\n");
      out.write("            if ($scope.category.name == undefined || $scope.category.name === \"\") {\r\n");
      out.write("                $scope.errorName = true;\r\n");
      out.write("                $scope.goRegister = true;\r\n");
      out.write("            } else\r\n");
      out.write("            if ($scope.category.description == undefined || $scope.category.description === \"\") {\r\n");
      out.write("                $scope.errorDescription = true;\r\n");
      out.write("                $scope.goRegister = true;\r\n");
      out.write("            } else {\r\n");
      out.write("                $scope.errorDescription = false;\r\n");
      out.write("                $scope.errorName = false;\r\n");
      out.write("                $scope.goRegister = false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        $scope.validateUpdate = () => {\r\n");
      out.write("            if ($scope.description == undefined || $scope.description === \"\") {\r\n");
      out.write("                $scope.errorDescription = true;\r\n");
      out.write("                $scope.goModify = true;\r\n");
      out.write("            } else {\r\n");
      out.write("                $scope.errorDescription = false;\r\n");
      out.write("                $scope.goModify = false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        $scope.register = () => {\r\n");
      out.write("            Swal.fire({\r\n");
      out.write("                title: '¿Quieres registrar la categoría?',\r\n");
      out.write("                showCancelButton: true,\r\n");
      out.write("                confirmButtonText: 'Guardar',\r\n");
      out.write("                cancelButtonText: 'Cancelar',\r\n");
      out.write("                icon: 'question'\r\n");
      out.write("            }).then((result) => {\r\n");
      out.write("                if (result.isConfirmed) {\r\n");
      out.write("                    $http({\r\n");
      out.write("                        method: 'POST',\r\n");
      out.write("                        headers: {\r\n");
      out.write("                            'Content-Type': 'application/x-www-form-urlencoded',\r\n");
      out.write("                        },\r\n");
      out.write("                        url: 'http://localhost:8080/basic_struts/register',\r\n");
      out.write("                        data: \"params=\" + JSON.stringify($scope.category),\r\n");
      out.write("                    }).then(function successCallback(response) {\r\n");
      out.write("                        console.log(response.data);\r\n");
      out.write("                        $scope.errorDescription = false;\r\n");
      out.write("                        $scope.errorName = false;\r\n");
      out.write("                        $scope.category = {}\r\n");
      out.write("                        $scope.goRegister = true;\r\n");
      out.write("                        Swal.fire({\r\n");
      out.write("                            position: 'top-end',\r\n");
      out.write("                            icon: 'success',\r\n");
      out.write("                            title: '¡Se ha registrado la categoría!',\r\n");
      out.write("                            showConfirmButton: false,\r\n");
      out.write("                            timer: 1500\r\n");
      out.write("                        })\r\n");
      out.write("                        $scope.getAll()\r\n");
      out.write("                    }, function errorCallback(response) {\r\n");
      out.write("                        console.log(\"aaa\");\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        $scope.modifyGo = () => {\r\n");
      out.write("            Swal.fire({\r\n");
      out.write("                title: '¿Quieres modificar la categoría?',\r\n");
      out.write("                showCancelButton: true,\r\n");
      out.write("                confirmButtonText: 'Modificar',\r\n");
      out.write("                cancelButtonText: 'Cancelar',\r\n");
      out.write("                icon: 'question'\r\n");
      out.write("            }).then((result) => {\r\n");
      out.write("                if (result.isConfirmed) {\r\n");
      out.write("                    let categoryModify = new Object();\r\n");
      out.write("                    categoryModify.id = $scope.id\r\n");
      out.write("                    categoryModify.name = $scope.name\r\n");
      out.write("                    categoryModify.description = $scope.description\r\n");
      out.write("                    $http({\r\n");
      out.write("                        method: 'POST',\r\n");
      out.write("                        headers: {\r\n");
      out.write("                            'Content-Type': 'application/x-www-form-urlencoded',\r\n");
      out.write("                        },\r\n");
      out.write("                        url: 'http://localhost:8080/basic_struts/update',\r\n");
      out.write("                        data: \"params=\" + JSON.stringify(categoryModify),\r\n");
      out.write("                    }).then(function successCallback(response) {\r\n");
      out.write("                        $scope.errorDescription = false;\r\n");
      out.write("                        $scope.errorName = false;\r\n");
      out.write("                        $scope.category = {}\r\n");
      out.write("                        $scope.goRegister = true;\r\n");
      out.write("                        Swal.fire({\r\n");
      out.write("                            position: 'top-end',\r\n");
      out.write("                            icon: 'success',\r\n");
      out.write("                            title: '¡Se ha modificado la categoría!',\r\n");
      out.write("                            showConfirmButton: false,\r\n");
      out.write("                            timer: 1500\r\n");
      out.write("                        })\r\n");
      out.write("                        $scope.getAll()\r\n");
      out.write("                    }, function errorCallback(response) {\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $scope.delete = (id) => {\r\n");
      out.write("            let categoryDelete = new Object();\r\n");
      out.write("            categoryDelete.id = id\r\n");
      out.write("            Swal.fire({\r\n");
      out.write("                title: '¿Quieres eliminar la categoría?',\r\n");
      out.write("                showCancelButton: true,\r\n");
      out.write("                confirmButtonText: 'Eliminar',\r\n");
      out.write("                cancelButtonText: 'Cancelar',\r\n");
      out.write("                icon: 'question'\r\n");
      out.write("            }).then((result) => {\r\n");
      out.write("                if (result.isConfirmed) {\r\n");
      out.write("                    $http({\r\n");
      out.write("                        method: 'POST',\r\n");
      out.write("                        headers: {\r\n");
      out.write("                            'Content-Type': 'application/x-www-form-urlencoded',\r\n");
      out.write("                        },\r\n");
      out.write("                        url: 'http://localhost:8080/basic_struts/delete',\r\n");
      out.write("                        data: \"params=\" + JSON.stringify(categoryDelete),\r\n");
      out.write("                    }).then(function successCallback(response) {\r\n");
      out.write("                        console.log(response.data);\r\n");
      out.write("                        $scope.errorDescription = false;\r\n");
      out.write("                        $scope.errorName = false;\r\n");
      out.write("                        $scope.category = {}\r\n");
      out.write("                        $scope.goRegister = true;\r\n");
      out.write("                        Swal.fire({\r\n");
      out.write("                            position: 'top-end',\r\n");
      out.write("                            icon: 'success',\r\n");
      out.write("                            title: '¡Se ha eliminado la categoría!',\r\n");
      out.write("                            showConfirmButton: false,\r\n");
      out.write("                            timer: 1500\r\n");
      out.write("                        })\r\n");
      out.write("                        $scope.getAll()\r\n");
      out.write("                    }, function errorCallback(response) {\r\n");
      out.write("                        console.log(\"aaa\");\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        $scope.getCat = (id) => {\r\n");
      out.write("            for (let i = 0; i < $scope.data.categoryList.length; i++) {\r\n");
      out.write("\r\n");
      out.write("                if ($scope.data.categoryList[i].id == id) {\r\n");
      out.write("                    $scope.id = $scope.data.categoryList[i].id\r\n");
      out.write("                    $scope.name = $scope.data.categoryList[i].name\r\n");
      out.write("                    $scope.description = $scope.data.categoryList[i].description\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/afd8979cda.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"\r\n");
      out.write("        integrity=\"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\"\r\n");
      out.write("        integrity=\"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"\r\n");
      out.write("        integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
